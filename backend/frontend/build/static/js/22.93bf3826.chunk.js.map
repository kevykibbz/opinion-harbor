{"version":3,"file":"static/js/22.93bf3826.chunk.js","mappings":"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","sources":["Components/Form/Modal/Modal.jsx","Components/Endpoints/Endpoints.jsx","Components/Form/Loader/Loader.jsx","Components/Form/Steps/Step1.jsx","Components/Form/Steps/Step2.jsx","Components/Form/Steps/Step3.jsx","Components/Form/Steps/Step4.jsx","Components/Form/Steps/Step5.jsx","Components/Form/Steps/Step6.jsx","Components/Form/Steps/Overall1.jsx","Components/Form/Steps/Overall2.jsx","Components/Form/Toast/CustomToast.jsx","Components/Form/SurveyForm.jsx","Components/Form/Modal/EmailSearch.jsx","Components/Form/Modal/CertificatesModal.jsx","Components/Form/SurveyResponse.jsx","Components/Home/Home.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nfunction Modal() {\r\n  return (\r\n    <div className=\"modal fade\" id=\"terms-txt\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"termsLabel\" aria-hidden=\"true\">\r\n\t\t<div className=\"modal-dialog modal-dialog-centered\">\r\n\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t<div className=\"modal-header\">\r\n\t\t\t\t\t<h4 className=\"modal-title\" id=\"termsLabel\">Terms and conditions</h4>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"modal-body\">\r\n                    <h6>1. Acceptance of Terms</h6>\r\n\t\t\t\t\t<p>By accessing and using OpinionHarbor, you agree to comply with and be bound by these Terms and Conditions. If you do not agree with these Terms and Conditions, please do not use this Website.</p>\r\n                    <h6>2. User Registration</h6>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><b>a</b><p> To participate in surveys and use certain features of the Website, you may be required to register an account. You agree to provide accurate and up-to-date information during the registration process, including your name, email address, and any other requested information.</p></li>\r\n\t\t\t\t\t\t<li><b>b</b><p>You are responsible for maintaining the confidentiality of your account credentials, and you are solely responsible for all activities that occur under your account.</p></li>\r\n                    </ul>\r\n                    <h6>3. User Content</h6>\r\n                    <p>You may be asked to submit information and content, including your name, programming stack languages, gender, certificates, and a brief description of yourself. You retain ownership of the content you provide</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"modal-footer\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn_1\" data-bs-dismiss=\"modal\">Close</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n  )\r\n}\r\n\r\nexport default Modal","const endpoints={\r\n    \"options\":{\r\n        \"production\":\"https://opinion-harbor-6c2c204c10f4.herokuapp.com/api/options\",\r\n        \"development\":\"http://127.0.0.1:8000/api/options\",\r\n        \r\n    },\r\n    \"responses\":{\r\n        \"production\":\"https://opinion-harbor-6c2c204c10f4.herokuapp.com/api/questions/responses\",\r\n        \"development\":\"http://127.0.0.1:8000/api/questions/responses\",\r\n    },\r\n    \"questions\":{\r\n        \"production\":\"https://opinion-harbor-6c2c204c10f4.herokuapp.com/api/questions\",\r\n        \"development\":\"http://127.0.0.1:8000/api/questions\",\r\n    },\r\n    \"certificates\":{\r\n        \"production\":\"https://opinion-harbor-6c2c204c10f4.herokuapp.com/api/questions/certificates\",\r\n        \"development\":\"http://127.0.0.1:8000/api/questions/certificates\",\r\n    },\r\n    \"download\":{\r\n        \"production\":\"https://opinion-harbor-6c2c204c10f4.herokuapp.com/api/questions/responses/certificates\",\r\n        \"development\":\"http://127.0.0.1:8000/api/questions/responses/certificates\"\r\n    }\r\n}\r\nexport default endpoints","import ContentLoader from \"react-content-loader\";\r\n\r\nconst Loader = () => (\r\n    <ContentLoader\r\n      speed={2}\r\n      width={200}\r\n      height={50}\r\n      viewBox=\"0 0 200 50\"\r\n      backgroundColor=\"#f3f3f3\"\r\n      foregroundColor=\"#ecebeb\"\r\n    >\r\n      <rect x=\"0\" y=\"15\" rx=\"5\" ry=\"5\" width=\"150\" height=\"10\" />\r\n      <rect x=\"0\" y=\"30\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\r\n    </ContentLoader>\r\n  );\r\n\r\nexport default Loader;","import React, { useState, useEffect,useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport axios from \"axios\";\r\nimport endpoints from \"../../Endpoints/Endpoints\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport xmlJs from 'xml-js'; \r\n\r\nfunction Step1({ setStepValid, setFinalFormData }) {\r\n  const fullNameInputRef = useRef(null);\r\n  \r\n  const [question, setQuestion] = useState(null);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  const [formData, setFormData] = useState({\r\n    full_name: \"\",\r\n    terms: false, \r\n  });\r\n\r\n  const [validations, setValidations] = useState({\r\n    full_name: true,\r\n    terms: true, \r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    full_name: \"\",\r\n    terms: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Check if any input field is empty\r\n    const isAnyFieldEmpty = Object.values(formData).some((value) => value === \"\");\r\n\r\n    // Set form validity based on input validations and whether any field is empty\r\n    const isFormValid = Object.values(validations).every((valid) => valid) && !isAnyFieldEmpty;\r\n\r\n    setStepValid(isFormValid);\r\n  }, [formData, validations, setStepValid]);\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n  \r\n    let errorMessage = \"\";\r\n  \r\n    if (!value) {\r\n      errorMessage = \"This field is required.\";\r\n    } else if (type === \"checkbox\") {\r\n      errorMessage = checked ? \"\" : \"Please accept the Terms and Conditions\";\r\n\r\n      setValidations({\r\n        ...validations,\r\n        [name]: checked,\r\n      });\r\n    }\r\n  \r\n    setValidations({\r\n      ...validations,\r\n      [name]: !errorMessage,\r\n    });\r\n\r\n     \r\n  \r\n    setErrors({\r\n      ...errors,\r\n      [name]: errorMessage,\r\n    });\r\n  \r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  \r\n    const isFormValid = Object.values(validations).every((valid) => valid);\r\n    setStepValid(isFormValid);\r\n\r\n    // Call setFinalFormData with the updated form data\r\n    setFinalFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n\r\n  };\r\n   \r\n  useEffect(() => {\r\n    if(fullNameInputRef.current){\r\n      fullNameInputRef.current.focus();\r\n    }\r\n  }, []);\r\n  \r\n  useEffect(() => {\r\n    const endpoint =\r\n      process.env.NODE_ENV === \"production\"\r\n        ? endpoints.questions.production\r\n        : endpoints.questions.development;\r\n    axios\r\n      .get(endpoint)\r\n      .then((response) => {\r\n        const jsonData = xmlJs.xml2json(response.data, { compact: true, spaces: 4 });\r\n        const parsedData = JSON.parse(jsonData);\r\n  \r\n        if (parsedData && parsedData.questions && parsedData.questions.question) {\r\n          const questions = parsedData.questions.question;\r\n    \r\n          for (const question of questions) {\r\n            if (question._attributes && question._attributes.name === \"full_name\") {\r\n              // Extract information\r\n              const extractedInfo = {\r\n                _attributes: question._attributes,\r\n                text: question.text ? question.text._text : null,\r\n                description: question.description ? question.description._text : null,\r\n              };\r\n              setQuestion(extractedInfo)\r\n              break; \r\n            }\r\n          }\r\n        } else {\r\n          console.error(\"Invalid questions data structure\");\r\n        }\r\n    \r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Error fetching question\");\r\n      });\r\n  }, []);\r\n  return (\r\n    <>\r\n      <div className=\"summary step\">\r\n        <h3 className=\"main_question\">\r\n          <strong>1/6</strong>Basic details\r\n        </h3>\r\n        <ul>\r\n          <li>\r\n            <strong>1</strong>\r\n            <div className=\"form-group\">\r\n              {loading ? (\r\n                <>\r\n                  <Loader />\r\n                  <br />\r\n                </>\r\n              ):(<>\r\n                <label>First Name</label>\r\n                <input\r\n                type=\"text\"\r\n                name={question && question._attributes.name}\r\n                className={`form-control required ${\r\n                  !validations.full_name ? \"is-invalid \" : \"\"\r\n                }`}\r\n                placeholder={question && question.text}\r\n                title={question && question.description}\r\n                value={formData.full_name}\r\n                onChange={handleInputChange}\r\n                ref={fullNameInputRef}\r\n                required={question && question._attributes.required}\r\n              />\r\n              {errors.full_name && (\r\n                <div className=\"invalid-feedback\">{errors.full_name}</div>\r\n              )}\r\n              </>)}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <div className=\"form-check form-group terms\">\r\n          <label className=\" form-check-label container_check\" htmlFor=\"invalidCheck3\">\r\n            Please accept our{\" \"}\r\n            <Link to=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#terms-txt\" rel=\"noreferrer\">\r\n              {\" \"}\r\n              Terms and conditions\r\n            </Link>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"terms\"\r\n              id=\"invalidCheck3\"\r\n              aria-describedby=\"invalidFeedbackCheck3\"\r\n              checked={formData.terms}\r\n              onChange={handleInputChange}\r\n              required\r\n              className={`form-check-input required ${!validations.terms ? \"is-invalid \" : \"\"}`}\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n          </label>\r\n          {errors.terms && <div id=\"invalidFeedbackCheck3\" className=\"invalid-feedback\">{errors.terms}</div>}\r\n        </div>\r\n      </div>\r\n      <Modal />\r\n      <Toaster />\r\n    </>\r\n  );\r\n}\r\nexport default Step1;","import React, { useState, useEffect,useRef } from \"react\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport axios from \"axios\";\r\nimport endpoints from \"../../Endpoints/Endpoints\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport xmlJs from 'xml-js'; \r\n\r\n\r\nfunction Step2({ setStepValid, setFinalFormData }) {\r\n    const emailInputRef = useRef(null);\r\n  \r\n    const [question, setQuestion] = useState(null);\r\n\r\n    const [loading, setLoading] = useState(true);\r\n\r\n\r\n    const [formData, setFormData] = useState({\r\n        email_address: \"\",\r\n    });\r\n\r\n    const [validations, setValidations] = useState({\r\n        email_address: true,\r\n    });\r\n\r\n    const [errors, setErrors] = useState({\r\n        email_address: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Check if any input field is empty\r\n        const isAnyFieldEmpty = Object.values(formData).some((value) => value === \"\");\r\n    \r\n        // Set form validity based on input validations and whether any field is empty\r\n        const isFormValid = Object.values(validations).every((valid) => valid) && !isAnyFieldEmpty;\r\n    \r\n        setStepValid(isFormValid);\r\n      }, [formData, validations, setStepValid]);\r\n    \r\n      const handleInputChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n      \r\n        let errorMessage = \"\";\r\n      \r\n        if (name === \"email_address\") {\r\n            if (!value) {\r\n              errorMessage = \"This field is required.\";\r\n            } else {\r\n              const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n              const isValid = emailPattern.test(value);\r\n        \r\n              if (!isValid) {\r\n                errorMessage = \"Please enter a valid email address.\";\r\n              }\r\n            }\r\n      \r\n        }\r\n      \r\n        setValidations({\r\n          ...validations,\r\n          [name]: !errorMessage,\r\n        });\r\n    \r\n         \r\n      \r\n        setErrors({\r\n          ...errors,\r\n          [name]: errorMessage,\r\n        });\r\n      \r\n        setFormData({\r\n          ...formData,\r\n          [name]: type === \"checkbox\" ? checked : value,\r\n        });\r\n      \r\n        const isFormValid = Object.values(validations).every((valid) => valid);\r\n        setStepValid(isFormValid);\r\n    \r\n        // Call setFinalFormData with the updated form data\r\n        setFinalFormData((prevFormData) => ({\r\n          ...prevFormData,\r\n          [name]: type === \"checkbox\" ? checked : value,\r\n        }));\r\n    \r\n      };\r\n\r\n      useEffect(() => {\r\n        if(emailInputRef.current){\r\n            emailInputRef.current.focus();\r\n        }\r\n      }, []);\r\n    \r\n      useEffect(() => {\r\n        const endpoint =\r\n          process.env.NODE_ENV === \"production\"\r\n            ? endpoints.questions.production\r\n            : endpoints.questions.development;\r\n        axios\r\n          .get(endpoint)\r\n          .then((response) => {\r\n            const jsonData = xmlJs.xml2json(response.data, { compact: true, spaces: 4 });\r\n            const parsedData = JSON.parse(jsonData);\r\n      \r\n            if (parsedData && parsedData.questions && parsedData.questions.question) {\r\n              const questions = parsedData.questions.question;\r\n        \r\n              for (const question of questions) {\r\n                if (question._attributes && question._attributes.name === \"email_address\") {\r\n                  // Extract information\r\n                  const extractedInfo = {\r\n                    _attributes: question._attributes,\r\n                    text: question.text ? question.text._text : null,\r\n                    description: question.description ? question.description._text : null,\r\n                  };\r\n                  setQuestion(extractedInfo)\r\n                  break; \r\n                }\r\n              }\r\n            } else {\r\n              console.error(\"Invalid questions data structure\");\r\n            }\r\n        \r\n            setLoading(false);\r\n          })\r\n          .catch((error) => {\r\n            toast.error(\"Error fetching question\");\r\n          });\r\n      }, []);\r\n  return (\r\n    <>\r\n      <div className=\"summary step\">\r\n        <h3 className=\"main_question\">\r\n          <strong>2/6</strong>Basic details\r\n        </h3>\r\n        <ul>\r\n          <li>\r\n            <strong>2</strong>\r\n            <div className=\"form-group\">\r\n              {loading ? (\r\n                <>\r\n                  <Loader />\r\n                  <br />\r\n                </>\r\n              ):(<>\r\n                <label>Email Address</label>\r\n                <input\r\n                type=\"text\"\r\n                name={question && question._attributes.name}\r\n                className={`form-control required ${\r\n                  !validations.email_address ? \"is-invalid \" : \"\"\r\n                }`}\r\n                placeholder={question && question.text}\r\n                title={question && question.description}\r\n                value={formData.email_address}\r\n                onChange={handleInputChange}\r\n                ref={emailInputRef}\r\n                required={question && question._attributes.required}\r\n              />\r\n              {errors.email_address && (\r\n                <div className=\"invalid-feedback\">{errors.email_address}</div>\r\n              )}\r\n              </>)}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <Modal />\r\n      <Toaster />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Step2","import React, { useState, useEffect,useRef} from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport endpoints from \"../../Endpoints/Endpoints\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport xmlJs from 'xml-js'; \r\n\r\nfunction Step3({ setStepValid,setFinalFormData }) {\r\n  const descriptionInputRef = useRef(null);\r\n\r\n  const [question, setQuestion] = useState(null);\r\n\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  const [formData, setFormData] = useState({\r\n    description: \"\",\r\n  });\r\n\r\n  const [validations, setValidations] = useState({\r\n    description: true,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    description: \"\",\r\n  });\r\n  \r\n  useEffect(() => {\r\n    // Check if any input field is empty\r\n    const isAnyFieldEmpty = Object.values(formData).some((value) => value === \"\");\r\n\r\n    // Set form validity based on input validations and whether any field is empty\r\n    const isFormValid = Object.values(validations).every((valid) => valid) && !isAnyFieldEmpty;\r\n\r\n    setStepValid(isFormValid);\r\n  }, [formData, validations, setStepValid]);\r\n\r\n  useEffect(() => {\r\n    const endpoint =\r\n      process.env.NODE_ENV === \"production\"\r\n        ? endpoints.questions.production\r\n        : endpoints.questions.development;\r\n    axios\r\n      .get(endpoint)\r\n      .then((response) => {\r\n        const jsonData = xmlJs.xml2json(response.data, { compact: true, spaces: 4 });\r\n        const parsedData = JSON.parse(jsonData);\r\n  \r\n        if (parsedData && parsedData.questions && parsedData.questions.question) {\r\n          const questions = parsedData.questions.question;\r\n    \r\n          for (const question of questions) {\r\n            if (question._attributes && question._attributes.name === \"description\") {\r\n              // Extract information\r\n              const extractedInfo = {\r\n                _attributes: question._attributes,\r\n                text: question.text ? question.text._text : null,\r\n                description: question.description ? question.description._text : null,\r\n              };\r\n              setQuestion(extractedInfo)\r\n              break; \r\n            }\r\n          }\r\n        } else {\r\n          console.error(\"Invalid questions data structure\");\r\n        }\r\n    \r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Error fetching qusetion\");\r\n      });\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    let errorMessage = \"\";\r\n\r\n    if (!value) {\r\n      errorMessage = \"This field is required.\";\r\n    }\r\n\r\n    setValidations({\r\n      ...validations,\r\n      [name]: !errorMessage,\r\n    });\r\n\r\n    setErrors({\r\n      ...errors,\r\n      [name]: errorMessage,\r\n    });\r\n\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n\r\n    const isFormValid = Object.values(validations).every((valid) => valid);\r\n    setStepValid(isFormValid);\r\n\r\n    // Call setFinalFormData with the updated form data\r\n    setFinalFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if(descriptionInputRef.current){\r\n      descriptionInputRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n    <div className=\"summary step\">\r\n        <h3 className=\"main_question\">\r\n          <strong>3/6</strong>Basic details\r\n        </h3>\r\n        <ul>\r\n          <li>\r\n            <strong>3</strong>\r\n            <div className=\"form-group\">\r\n              {loading ? (\r\n                <>\r\n                  <Loader />\r\n                  <br />\r\n                </>\r\n              ):(<>\r\n                <label>Description</label>\r\n                <textarea\r\n                 name={question && question._attributes.name}\r\n                 className={`form-control required ${\r\n                   !validations.description ? \"is-invalid \" : \"\"\r\n                 }`}\r\n                 spellCheck=\"true\"\r\n                 placeholder={question && question.text}\r\n                 title={question && question.description}\r\n                 value={formData.description}\r\n                 onChange={handleInputChange}\r\n                 ref={descriptionInputRef}\r\n                 required={question && question._attributes.required}\r\n                ></textarea>\r\n              {errors.description && (\r\n                <div className=\"invalid-feedback\">{errors.description}</div>\r\n              )}\r\n              </>)}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <Toaster />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Step3;","import React, { useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport endpoints from \"../../Endpoints/Endpoints\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nfunction Step4({ setStepValid,setFinalFormData }) {\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [genderOptions, setGenderOptions] = useState([]);\r\n\r\n    const [formData, setFormData] = useState({\r\n        gender: \"\",\r\n    });\r\n\r\n    const [validations, setValidations] = useState({\r\n        gender: true,\r\n    });\r\n\r\n    const [errors, setErrors] = useState({\r\n        gender: \"\",\r\n    });\r\n\r\n    useEffect(() => {\r\n        // Check if any input field is empty\r\n        const isAnyFieldEmpty = Object.values(formData).some((value) => value === \"\");\r\n    \r\n        // Set form validity based on input validations and whether any field is empty\r\n        const isFormValid = Object.values(validations).every((valid) => valid) && !isAnyFieldEmpty;\r\n    \r\n        setStepValid(isFormValid);\r\n    }, [formData, validations, setStepValid]);\r\n\r\n    useEffect(() => {\r\n        const endpoint =\r\n          process.env.NODE_ENV === \"production\"\r\n            ? endpoints.options.production\r\n            : endpoints.options.development;\r\n        axios\r\n          .get(endpoint)\r\n          .then((response) => {\r\n            setGenderOptions(response.data.gender);\r\n            setLoading(false);\r\n          })\r\n          .catch((error) => {\r\n            toast.error(\"Error fetching gender options\");\r\n          });\r\n    }, []);\r\n\r\n      const handleInputChange = (e) => {\r\n        const { name, value } = e.target;\r\n    \r\n        let errorMessage = \"\";\r\n    \r\n        if (name === \"gender\") {\r\n          if (!value) {\r\n            errorMessage = \"Please select a gender.\";\r\n          }\r\n    \r\n          setValidations({\r\n            ...validations,\r\n            [name]: !errorMessage,\r\n          });\r\n        } \r\n\r\n        setErrors({\r\n          ...errors,\r\n          [name]: errorMessage,\r\n        });\r\n    \r\n        setFormData({\r\n          ...formData,\r\n          [name]: value,\r\n        });\r\n    \r\n        const isFormValid = Object.values(validations).every((valid) => valid);\r\n        setStepValid(isFormValid);\r\n    \r\n        // Call setFinalFormData with the updated form data\r\n        setFinalFormData((prevFormData) => ({\r\n          ...prevFormData,\r\n          [name]: value,\r\n        }));\r\n      };\r\n\r\n  return (<>\r\n    <div className=\"summary step\">\r\n      <h3 className=\"main_question\">\r\n        <strong>4/6</strong>General Description\r\n      </h3>\r\n      <ul>\r\n        <li>\r\n          <strong>4</strong>\r\n          <div className=\"form-group\">\r\n            <label>Gender</label>\r\n            <br />\r\n            {loading ? (\r\n              <>\r\n                <Loader />\r\n                <br />\r\n                <Loader />\r\n                <br />\r\n                <Loader />\r\n              </>\r\n            ) : (\r\n              <div className=\"form-group\">\r\n                {genderOptions.map((option) => (\r\n                  <label\r\n                    key={option.id}\r\n                    className=\"container_radio version_2\"\r\n                  >\r\n                    {option.option.charAt(0).toUpperCase() + option.option.slice(1)}\r\n                    <input\r\n                      type=\"radio\"\r\n                      name=\"gender\"\r\n                      value={option.option}\r\n                      className=\"required\"\r\n                      onChange={handleInputChange}\r\n                    />\r\n                    <span className=\"checkmark\"></span>\r\n                  </label>\r\n                ))}\r\n              </div>\r\n            )}\r\n            {errors.gender && (\r\n              <div className=\"invalid-feedback\">{errors.gender}</div>\r\n            )}\r\n          </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <Toaster />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Step4","import React, { useState, useEffect} from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport endpoints from \"../../Endpoints/Endpoints\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\n\r\nfunction Step5({ setStepValid,setFinalFormData }) {\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [programmingStackOptions, setProgrammingStackOptions] = useState([]);\r\n\r\n    const [selectedProgrammingStack, setSelectedProgrammingStack] = useState([]);\r\n\r\n    const [programmingStackError, setProgrammingStackError] = useState(\"\");\r\n\r\n    const endpoint =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? endpoints.options.production\r\n      : endpoints.options.development;\r\n\r\n    useEffect(() => {\r\n        axios\r\n        .get(endpoint)\r\n        .then((response) => {\r\n            setProgrammingStackOptions(response.data.programming_stack);\r\n            setLoading(false);\r\n        })\r\n        .catch(() => {\r\n            toast.error(\"Error fetching programming stack options\");\r\n        });\r\n    }, [endpoint]);\r\n\r\n    useEffect(() => {\r\n        // Check if at least one programming language is selected\r\n        const isProgrammingStackValid = selectedProgrammingStack.length > 0;\r\n        setProgrammingStackError(isProgrammingStackValid ? \"\" : \"Choose at least one programming language\");\r\n    \r\n    \r\n        // Set form validity based on validations\r\n        const isFormValid = isProgrammingStackValid;\r\n        setStepValid(isFormValid);\r\n    \r\n    \r\n      // Create updated data directly\r\n      const updatedData = {\r\n        programming_stack: isProgrammingStackValid ? selectedProgrammingStack.join(',') : '',\r\n      };\r\n    \r\n      // console.log(\"updatedData\", updatedData)\r\n    \r\n      // Update finalFormData using setFinalFormData prop\r\n      setFinalFormData((prevFormData) => ({\r\n        ...prevFormData,\r\n        ...updatedData,\r\n      }));\r\n    \r\n      }, [selectedProgrammingStack, setFinalFormData, setStepValid]);\r\n    \r\n      const handleProgrammingStackChange = (e) => {\r\n        const value = e.target.value;\r\n        if (e.target.checked) {\r\n          setSelectedProgrammingStack([...selectedProgrammingStack, value]);\r\n        } else {\r\n          setSelectedProgrammingStack(selectedProgrammingStack.filter((stack) => stack !== value));\r\n        }\r\n        \r\n      };\r\n\r\n  return (\r\n    <>\r\n    <div className=\"summary step\">\r\n      <h3 className=\"main_question\">\r\n        <strong>5/6</strong>Programming stacks\r\n      </h3>\r\n      <ul>\r\n        <li>\r\n          <strong>5</strong>\r\n          <div className=\"column-container\">\r\n            {loading ? (\r\n              <>\r\n                <Loader />\r\n                <br />\r\n                <Loader />\r\n                <br />\r\n                <Loader />\r\n                <br />\r\n                <Loader />\r\n                <br />\r\n                <Loader />\r\n              </>\r\n            ) : (\r\n              programmingStackOptions.map((option) => (\r\n               <div key={option.id} className=\"form-check\">\r\n                 <label htmlFor={`form-check-${option.id}`} className=\"form-check-label container_radio version_2\">\r\n                 {option.option.charAt(0).toUpperCase() + option.option.slice(1)}\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    id={`form-check-${option.id}`}\r\n                    name=\"programming_stack\"\r\n                    className={`form-check-input ${\r\n                      programmingStackError ? \"is-invalid \" : \"\"\r\n                    }`}\r\n                    value={option.option}\r\n                    onChange={handleProgrammingStackChange}\r\n                  />\r\n                  <span className=\"checkmark\"></span>\r\n                </label>\r\n               </div>\r\n             ))\r\n            )}\r\n          </div>\r\n          {programmingStackError && (\r\n            <div className=\"error-message text-danger\">{programmingStackError}</div>\r\n          )}\r\n        </li>\r\n      </ul>\r\n    </div>\r\n    <Toaster />\r\n  </>\r\n  )\r\n}\r\n\r\nexport default Step5","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport endpoints from \"../../Endpoints/Endpoints\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport xmlJs from 'xml-js'; \r\n\r\nfunction Step6({ setStepValid,setFinalFormData }) {\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [question, setQuestion] = useState(null);\r\n\r\n    const [selectedCertificates, setSelectedCertificates] = useState([]);\r\n\r\n    const [certificatesError, setCertificatesError] = useState(\"\");\r\n\r\n    useEffect(() => {\r\n        \r\n        const hasUploadedFiles = selectedCertificates.length > 0;\r\n\r\n        if(hasUploadedFiles){\r\n            // Check if certificates field has valid PDF files\r\n            const isCertificatesValid = selectedCertificates.every((file) =>\r\n                file.type === \"application/pdf\"\r\n            );\r\n            setCertificatesError(isCertificatesValid ? \"\" : \"Upload only PDF files\");\r\n\r\n            // Set form validity based on validations\r\n            const isFormValid =isCertificatesValid;\r\n            setStepValid(isFormValid);\r\n\r\n            // Create updated data directly\r\n            const updatedData = {\r\n                certificate: isCertificatesValid ? selectedCertificates : '',\r\n            };\r\n            \r\n            \r\n            // Update finalFormData using setFinalFormData prop\r\n            setFinalFormData((prevFormData) => ({\r\n                ...prevFormData,\r\n                ...updatedData,\r\n            }));\r\n        }else{\r\n            setStepValid(false);\r\n        }\r\n       \r\n      }, [setFinalFormData,selectedCertificates, setStepValid]);\r\n\r\n      const handleCertificatesChange = (e) => {\r\n        const files = e.target.files;\r\n        setSelectedCertificates([...files]);\r\n      };\r\n    \r\n      useEffect(() => {\r\n        const endpoint =\r\n          process.env.NODE_ENV === \"production\"\r\n            ? endpoints.questions.production\r\n            : endpoints.questions.development;\r\n        axios\r\n          .get(endpoint)\r\n          .then((response) => {\r\n            const jsonData = xmlJs.xml2json(response.data, { compact: true, spaces: 4 });\r\n            const parsedData = JSON.parse(jsonData);\r\n      \r\n            if (parsedData && parsedData.questions && parsedData.questions.question) {\r\n              const questions = parsedData.questions.question;\r\n        \r\n              for (const question of questions) {\r\n                if (question._attributes && question._attributes.name === \"certificates\") {\r\n                  // Extract information\r\n                  const extractedInfo = {\r\n                    _attributes: question._attributes,\r\n                    text: question.text ? question.text._text : null,\r\n                    description: question.description ? question.description._text : null,\r\n                  };\r\n                  setQuestion(extractedInfo)\r\n                  break; \r\n                }\r\n              }\r\n            } else {\r\n              console.error(\"Invalid questions data structure\");\r\n            }\r\n        \r\n            setLoading(false);\r\n          })\r\n          .catch(() => {\r\n            toast.error(\"Error fetching qusetion\");\r\n          });\r\n      }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"summary step\">\r\n        <h3 className=\"main_question\">\r\n          <strong>6/6</strong>Certificates\r\n        </h3>\r\n        <ul>\r\n          <li>\r\n            <strong>6</strong>\r\n            <div className=\"form-group\">\r\n              {loading ? (\r\n                <>\r\n                  <Loader />\r\n                  <br />\r\n                </>\r\n              ):(<>\r\n                <label>Upload your certificates</label>\r\n                <input\r\n                    type={question && question._attributes.type}\r\n                    name=\"certificate\"\r\n                    required={question && question._attributes.required}\r\n                    className={`form-control required ${\r\n                    certificatesError ? \"is-invalid \" : \"\"\r\n                    }`}\r\n                    placeholder={question && question.text}\r\n                    accept=\".pdf\"\r\n                    title={question && question.description}\r\n                    multiple\r\n                    onChange={handleCertificatesChange}\r\n                />\r\n                {certificatesError && (\r\n                    <div className=\"error-message invalid-feedback\">{certificatesError}</div>\r\n                )}\r\n              </>)}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <Toaster />\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Step6","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setFormState } from \"../../../States/FormState\";\r\n\r\nfunction Overall1({setStepValid}) {\r\n  const state = useSelector((state) => state.formState.usersData);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if(state === null){\r\n      dispatch(setFormState(1));\r\n    }\r\n    setStepValid(true)\r\n   \r\n  }, [state,dispatch,setStepValid]); \r\n\r\n  return (\r\n    <div className=\"submit step\">\r\n      <h3 className=\"main_question\">\r\n        <strong>6/6</strong> Summary\r\n      </h3>\r\n      <div className=\"summary\">\r\n        <ul>\r\n          <li>\r\n            <strong>1</strong>\r\n            <h5>\r\n            What is your full name?\r\n            </h5>\r\n            {state.full_name && <p>{state.full_name}</p>}\r\n          </li>\r\n          <li>\r\n            <strong>2</strong>\r\n            <h5>What is your email address</h5>\r\n            {state.email_address && <p>{state.email_address}</p>}\r\n          </li>\r\n          <li>\r\n            <strong>3</strong>\r\n            <h5>Description</h5>\r\n           {state.description && <p>{state.description}</p>}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Overall1;\r\n","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFilePdf } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setFormState } from \"../../../States/FormState\";\r\n\r\n\r\nfunction Overall2() {\r\n    const state = useSelector((state) => state.formState.usersData);\r\n\r\n    const dispatch = useDispatch();\r\n  \r\n    useEffect(() => {\r\n      if(state === null){\r\n        dispatch(setFormState(1));\r\n      }\r\n     \r\n    }, [state,dispatch]); \r\n  return (\r\n    <div className=\"submit step\">\r\n      <h3 className=\"main_question\">\r\n        <strong>6/6</strong> Summary\r\n      </h3>\r\n      <div className=\"summary\">\r\n        <ul>\r\n          <li>\r\n            <strong>4</strong>\r\n            <h5>Gender</h5>\r\n            {state.gender && <p>{state.gender}</p>}\r\n          </li>\r\n          <li>\r\n            <strong>5</strong>\r\n            <h5>Programming stacks</h5>\r\n            {state.programming_stack && <p>{state.programming_stack}</p>}\r\n          </li>\r\n          <li>\r\n            <strong>6</strong>\r\n            <h5>Certificates</h5>\r\n            {state.certificate && state.certificate.map((certificate, index) => (\r\n              <div key={index}>\r\n               <p>\r\n                  {`${index + 1} : `}\r\n                  <a href={certificate.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <FontAwesomeIcon icon={faFilePdf} style={{ color: \"#FF0000\", marginLeft: \"5px\" }} />\r\n                    {\" \"}\r\n                    {certificate.name}\r\n                  </a>\r\n                </p>\r\n              </div>\r\n            ))}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Overall2","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInfoCircle, faCheckCircle, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst CustomToast = ({ type, message }) => {\r\n  const icons = {\r\n    success: faCheckCircle,\r\n    error: faExclamationCircle,\r\n    info: faInfoCircle,\r\n  };\r\n\r\n  const toastStyle = {\r\n    backgroundColor: type === 'info' ? '#d63384' : '',\r\n    color: 'white', \r\n    padding: '1rem',\r\n    borderRadius: '0.25rem',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  };\r\n\r\n  return (\r\n    <div style={toastStyle}>\r\n      <FontAwesomeIcon icon={icons[type]} style={{ marginRight: '0.5rem' }} />\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomToast;\r\n","import React,{useState,useRef,useEffect} from \"react\";\r\nimport Step1 from \"./Steps/Step1\";\r\nimport Step2 from \"./Steps/Step2\";\r\nimport Step3 from \"./Steps/Step3\";\r\nimport Step4 from \"./Steps/Step4\";\r\nimport Step5 from \"./Steps/Step5\";\r\nimport Step6 from \"./Steps/Step6\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Overall1 from \"./Steps/Overall1\";\r\nimport Overall2 from \"./Steps/Overall2\";\r\nimport { formState,setFormState,setPercentage } from \"../../States/FormState\";\r\nimport { updateUsersData } from \"../../States/FormState\";\r\nimport ReactConfirmPopup from \"react-confirm-popup\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport CustomToast from './Toast/CustomToast';\r\nimport ConfettiExplosion from 'react-confetti-explosion';\r\nimport axios from \"axios\";\r\nimport endpoints from \"../Endpoints/Endpoints\";\r\n\r\n\r\nfunction SurveyForm() {\r\n  const formRef = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isExploding, setIsExploding] = useState(false);\r\n  const stepState = useSelector(formState);\r\n  const [finalFormData, setFinalFormData] = useState(null);\r\n  const [stepValid, setStepValid] = useState(false);\r\n  const usersData = useSelector((state) => state.formState.usersData);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNext = () => {\r\n    if (stepState.stepState < 8) {\r\n      dispatch(setFormState(stepState.stepState + 1));\r\n      dispatch(setPercentage(stepState.percentage + 16.6667))\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (stepState.stepState > 1) {\r\n      dispatch(setFormState(stepState.stepState - 1));\r\n      dispatch(setPercentage(stepState.percentage - 16.6667))\r\n    }\r\n  };\r\n  \r\n  const handleConfirmClicked = () => {\r\n    if(usersData){\r\n      const formData = new FormData();\r\n    const endpoint =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? endpoints.responses.production\r\n      : endpoints.responses.development;\r\n\r\n      formData.append('full_name', usersData.full_name);\r\n      formData.append('email_address', usersData.email_address);\r\n      formData.append('description', usersData.description);\r\n      formData.append('gender',  usersData.gender);\r\n      formData.append('programming_stack',  usersData.programming_stack);\r\n      usersData.certificate.forEach((certificate, index) => {\r\n        formData.append('certificate', certificate);\r\n      });\r\n      setLoading(true);\r\n    axios\r\n    .put(endpoint, formData,{\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data', \r\n      },\r\n    })\r\n    .then((response) => {\r\n      setLoading(false);\r\n      if(response.status === 200){\r\n        toast.success(\"Survey data submitted successfully\");\r\n        setIsExploding(true);\r\n        setTimeout(() => {\r\n          setIsExploding(false);\r\n        }, 5000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      const errorMessages = error.response.data.errors;\r\n      if (error.response.data.errors !== undefined) {\r\n        Object.keys(errorMessages).forEach((key) => {\r\n          const messagesForCurrentKey = errorMessages[key];\r\n          const capitalizedKey = key.charAt(0).toUpperCase() + key.slice(1);\r\n      \r\n          if (Array.isArray(messagesForCurrentKey)) {\r\n            messagesForCurrentKey.forEach((message) => {\r\n              toast.error(`${capitalizedKey}: ${message}`);\r\n            });\r\n          } else {\r\n            toast.error(`${capitalizedKey}: ${messagesForCurrentKey}`);\r\n          }\r\n        });\r\n      }else{\r\n        toast.error(error.response.data.message);\r\n      }\r\n    });\r\n    }else{\r\n      dispatch(setFormState(1));\r\n    }\r\n  }\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  const handleCancelClicked=(e)=>{\r\n    toast.custom((t) => <CustomToast type=\"info\" message=\"You have cancelled the submission of your survey data.\" />);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(finalFormData !==null && typeof finalFormData === 'object'){\r\n      const keyLength=Object.keys(finalFormData).length\r\n      if(keyLength === 7){\r\n        dispatch(updateUsersData(finalFormData))\r\n      }\r\n    }\r\n  },[finalFormData,dispatch])\r\n\r\n  return (<>\r\n    <div id=\"wizard_container\">\r\n    {(stepState.stepState !==7 && stepState.stepState !==8) && (\r\n      <div id=\"top-wizard\">\r\n        <div\r\n          id=\"progressbar\"\r\n          className=\"ui-progressbar ui-widget ui-widget-content ui-corner-all\"\r\n          role=\"progressbar\"\r\n          aria-valuemin=\"0\"\r\n          aria-valuemax=\"100\"\r\n          aria-valuenow={stepState.percentage}\r\n        >\r\n          <div\r\n            className=\"ui-progressbar-value ui-widget-header ui-corner-left\"\r\n            style={{width:`${stepState.percentage}%`}}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n    )}\r\n      <form id=\"wrapped\" encType=\"multipart/form-data\" onSubmit={handleFormSubmit} ref={formRef}>\r\n        <div id=\"middle-wizard\">\r\n          {stepState.stepState === 1 && <Step1 setStepValid={setStepValid} setFinalFormData={setFinalFormData}/>}\r\n          {stepState.stepState === 2 && <Step2 setStepValid={setStepValid} setFinalFormData={setFinalFormData}/>}\r\n          {stepState.stepState === 3 && <Step3 setStepValid={setStepValid} setFinalFormData={setFinalFormData}/>}\r\n          {stepState.stepState === 4 && <Step4 setStepValid={setStepValid} setFinalFormData={setFinalFormData}/>}\r\n          {stepState.stepState === 5 && <Step5 setStepValid={setStepValid} setFinalFormData={setFinalFormData}/>}\r\n          {stepState.stepState === 6 && <Step6 setStepValid={setStepValid} setFinalFormData={setFinalFormData}/>}\r\n          {stepState.stepState === 7 && <Overall1 setStepValid={setStepValid}/>}\r\n          {stepState.stepState !== 1 && stepState.stepState !== 2 && stepState.stepState !== 3 && stepState.stepState !== 4 && stepState.stepState !== 5 && stepState.stepState !== 6 && stepState.stepState !== 7 && <Overall2 />}\r\n        </div>\r\n        <div id=\"bottom-wizard\">\r\n        {stepState.stepState === 1 && (\r\n          <button\r\n            type=\"button\"\r\n            name=\"forward\"\r\n            className=\"forward\"\r\n            onClick={handleNext}\r\n            disabled={!stepValid}\r\n          >\r\n            Next\r\n          </button>\r\n        )}\r\n\r\n        {stepState.stepState > 1 && stepState.stepState < 8 && (\r\n          <React.Fragment>\r\n            <button\r\n              type=\"button\"\r\n              name=\"backward\"\r\n              className=\"backward\"\r\n              onClick={handlePrevious}\r\n            >\r\n              Prev\r\n            </button>\r\n            <button\r\n              type=\"button\"\r\n              name=\"forward\"\r\n              className=\"forward\"\r\n              onClick={handleNext}\r\n              disabled={!stepValid}\r\n            >\r\n              {stepState.stepState === 7 ? \"Next Page\" : \"Next\"}\r\n            </button>\r\n          </React.Fragment>\r\n        )}\r\n\r\n        {stepState.stepState === 8 && (\r\n          <React.Fragment>\r\n            <button\r\n              type=\"button\"\r\n              name=\"backward\"\r\n              className=\"backward\"\r\n              onClick={handlePrevious}\r\n            >\r\n            {stepState.stepState === 8 ? \"Prev Page\" : \"Prev\"}\r\n            </button>\r\n            <ReactConfirmPopup\r\n              trigger={\r\n                <button\r\n                  type=\"submit\"\r\n                  name=\"process\"\r\n                  className=\"submit\"\r\n                >\r\n                  {loading ? (\r\n                    <>\r\n                      <i className=\"fa fa-spinner-third fa-solid\"></i>\r\n                      {\"Submitting...\"}\r\n                    </>\r\n                  ) : (\r\n                    \"Submit\"\r\n                  )}\r\n                </button>\r\n              }\r\n              title=\"Confirm submitting your survey data\"\r\n              text={\r\n                <div>Are you sure you want to submit data provided in the survey form?</div>\r\n              }\r\n              confirmText=\"Yes, I am sure\"\r\n              cancelText=\"No\"\r\n              onConfirmClicked={handleConfirmClicked}\r\n              onCancelClicked={handleCancelClicked}\r\n            />\r\n          </React.Fragment>\r\n        )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <Toaster />\r\n    {isExploding && <ConfettiExplosion />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default SurveyForm;\r\n","import React, { useState, useRef, useEffect } from 'react';\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport endpoints from '../../Endpoints/Endpoints';\r\nimport axios from \"axios\";\r\nimport xmlJs from 'xml-js'; \r\n\r\nfunction EmailSearch({ setData }) {\r\n  const emailInputRef = useRef(null);\r\n\r\n  const modalRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const [formData, setFormData] = useState({\r\n    email_address: '',\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    email_address: '',\r\n  });\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    let errorMessage = '';\r\n\r\n    // Basic email validation\r\n    if (name === 'email_address') {\r\n      if (!value.trim()) {\r\n        errorMessage = 'Email address is required';\r\n      } else if (\r\n        // Add more specific email validation if needed\r\n        !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)\r\n      ) {\r\n        errorMessage = 'Invalid email address';\r\n      }\r\n    }\r\n\r\n    setErrors((prevErrors) => ({ ...prevErrors, [name]: errorMessage }));\r\n    setFormData((prevFormData) => ({ ...prevFormData, [name]: value }));\r\n  };\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    // Check for errors before submitting\r\n    const hasErrors = Object.values(errors).some((error) => error);\r\n    if (hasErrors) {\r\n        toast.error(errors.email_address);\r\n    } else {\r\n      const endpoint =\r\n      process.env.NODE_ENV === \"production\"\r\n        ? endpoints.responses.production+\"?email_address=\"+formData.email_address\r\n        : endpoints.responses.development+\"?email_address=\"+formData.email_address;\r\n    setLoading(true)\r\n    axios\r\n      .get(endpoint)\r\n      .then((response) => {\r\n        const jsonData = xmlJs.xml2json(response.data, { compact: true, spaces: 4 });\r\n        const parsedData = JSON.parse(jsonData);\r\n        if (parsedData && parsedData.question_responses && parsedData.question_responses.question_response) {\r\n            const records = parsedData.question_responses.question_response;\r\n            setData([records]);\r\n            // Get the number of records\r\n            const numberOfRecords = Array.isArray(records)\r\n            ? records.length\r\n            : records\r\n            ? 1\r\n            : 0;\r\n\r\n            toast.success(`Found ${numberOfRecords} record(s)`); \r\n            closeModal(); \r\n        } else {\r\n        console.error('Invalid question_responses data structure');\r\n        }\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        setLoading(false)\r\n        toast.error(\"Error fetching qusetion\");\r\n      });\r\n    }\r\n  };\r\n\r\n  const closeModal = () => {\r\n    if (modalRef.current) {\r\n      modalRef.current.click();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (emailInputRef.current) {\r\n      emailInputRef.current.focus();\r\n    }\r\n  }, []);\r\n\r\n  return (<>\r\n    <div\r\n      className=\"modal fade\"\r\n      id=\"email-search-modal\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"serachLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-dialog-centered\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h4 className=\"modal-title\" id=\"termsLabel\">\r\n              Filter Responses By Email Address\r\n            </h4>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n              ref={modalRef}\r\n            ></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <form onSubmit={handleFormSubmit}>\r\n              <div className=\"form-group\">\r\n                <div style={{ float: 'left', marginBottom: '5px' }}>\r\n                  Email address\r\n                </div>\r\n                <input\r\n                  ref={emailInputRef}\r\n                  className={`form-control ${\r\n                    errors.email_address ? \"is-invalid \" : \"\"\r\n                  }`}                  type=\"search\"\r\n                  placeholder=\"Input email address\"\r\n                  title=\"Input email address\"\r\n                  name=\"email_address\"\r\n                  onChange={handleChange}\r\n                />\r\n                {errors.email_address && (\r\n                  <div className='invalid-feedback'>{errors.email_address}</div>\r\n                )}\r\n              </div>\r\n              <button type=\"submit\" name=\"process\" className=\"submit\">\r\n              {loading ? (\r\n                <>\r\n                    <i className=\"fa fa-spinner-third fa-solid\"></i>\r\n                    {\"Seraching...\"}\r\n                </>\r\n                ) : (\r\n                \"Search\"\r\n                )}\r\n              </button>\r\n            </form>\r\n          </div>\r\n          <div className=\"modal-footer\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn_1\"\r\n              data-bs-dismiss=\"modal\"\r\n            >\r\n              Close\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <Toaster/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmailSearch;","import React,{useState,useEffect} from \"react\";\r\nimport endpoints from \"../../Endpoints/Endpoints\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport axios from \"axios\";\r\nimport { List } from 'react-content-loader'\r\nimport DataTable from 'react-data-table-component';\r\nimport { faDownload } from '@fortawesome/free-solid-svg-icons';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport ReactConfirmPopup from \"react-confirm-popup\";\r\nimport CustomToast from '../Toast/CustomToast';\r\n\r\n\r\nfunction CertificatesModal({certificateId}) {\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    const [downloading, setDownLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n    const endpoint =\r\n      process.env.NODE_ENV === \"production\"\r\n        ? endpoints.certificates.production+\"/\"+certificateId\r\n        : endpoints.certificates.development+\"/\"+certificateId;\r\n        setLoading(true)\r\n        axios\r\n        .get(endpoint)\r\n        .then((response) => {\r\n            setLoading(false);\r\n            if (response.data.length > 0) {\r\n                setData(response.data);\r\n            } else {\r\n                toast.error(\"No data found in the response.\");\r\n            }\r\n        })\r\n        .catch(() => {\r\n          setLoading(false)\r\n          toast.error(\"Error fetching qusetion\");\r\n        });\r\n    }, [certificateId])\r\n\r\n    const columns = [\r\n        {\r\n          name: 'Id',\r\n          selector: (row) => row.id,\r\n          sortable: true,\r\n          searchable: true, \r\n        },\r\n        {\r\n          name: 'Name',\r\n          selector: (row) => row.name,\r\n          sortable: true,\r\n          searchable: true,\r\n        },\r\n        {\r\n            name: 'Download',\r\n            cell: (row) => (\r\n              <ReactConfirmPopup\r\n                trigger={\r\n                  <button\r\n                    type=\"submit\"\r\n                    name=\"process\"\r\n                    className=\"btn btn-primary btn-sm\"\r\n                  >\r\n                    {downloading ? \"Downloading...\" : (<><FontAwesomeIcon icon={faDownload} /> Download</>)}\r\n                  </button>\r\n                }\r\n                title=\"Confirm downloading\"\r\n                text={<div>Are you sure you want to download this file?</div>}\r\n                confirmText=\"Yes, I am sure\"\r\n                cancelText=\"No\"\r\n                onConfirmClicked={() => handleConfirmClicked(row.id,row.name)}\r\n                onCancelClicked={handleCancelClicked}\r\n              />\r\n            ),\r\n          },\r\n      ];\r\n\r\n      const paginationOptions = {\r\n        rowsPerPageText: 'Rows per page:',\r\n        rangeSeparatorText: 'of',\r\n        selectAllRowsItem: true,\r\n        selectAllRowsItemText: 'All',\r\n    };\r\n\r\n    const handleConfirmClicked = (id,name) => {\r\n        const endpoint =\r\n        process.env.NODE_ENV === \"production\"\r\n          ? endpoints.download.production+\"/\"+id\r\n          : endpoints.download.development+\"/\"+id;\r\n          setDownLoading(true)\r\n          axios\r\n          .get(endpoint)\r\n          .then((response) => {\r\n            setDownLoading(false)\r\n            // Check if the response contains a valid content type\r\n            const contentType = response.headers['content-type'];\r\n            if (contentType && contentType.toLowerCase().includes('application/pdf')) {\r\n                const blob = new Blob([response.data], { type: contentType });\r\n\r\n                const link = document.createElement('a');\r\n                link.href = window.URL.createObjectURL(blob);\r\n                link.download = `${name}.pdf`;\r\n                document.body.appendChild(link);\r\n                link.click();\r\n                document.body.removeChild(link);\r\n\r\n                toast.custom((t) => <CustomToast type=\"info\" message=\"File is downloading.\" />);\r\n            } else {\r\n                toast.error('Invalid content type. Unable to download the file.');\r\n            }\r\n          })\r\n          .catch(() => {\r\n            setDownLoading(false)\r\n            toast.error(\"Error downloading certificate\");\r\n          });\r\n    };\r\n    \r\n    const handleCancelClicked = () => {\r\n        toast.custom((t) => <CustomToast type=\"info\" message=\"You have cancelled download of the certificate\" />);\r\n    };\r\n  return (<>\r\n    <div\r\n      className=\"modal fade \"\r\n      id=\"myModal\"\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"exampleModalLabel\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-dialog-centered\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\" id=\"exampleModalLabel\">\r\n              Download Certificates\r\n            </h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            />\r\n          </div>\r\n          <div className=\"modal-body\">\r\n          {loading ? (\r\n            <List />\r\n            ) : (<>    \r\n                <DataTable\r\n                    columns={columns}\r\n                    data={data}\r\n                    pagination\r\n                    paginationComponentOptions={paginationOptions}\r\n                />\r\n            </>)}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <Toaster/>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CertificatesModal;\r\n","import React, { useEffect,useState,useRef} from 'react';\r\nimport DataTable from 'react-data-table-component';\r\nimport { List } from 'react-content-loader'\r\nimport endpoints from '../Endpoints/Endpoints';\r\nimport axios from \"axios\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport xmlJs from 'xml-js'; \r\nimport { faSearch } from '@fortawesome/free-solid-svg-icons';\r\nimport { faFilePdf } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport EmailSearch from './Modal/EmailSearch';\r\nimport { Link } from 'react-router-dom';\r\nimport CertificatesModal from './Modal/CertificatesModal';\r\n\r\nconst SurveyResponse = () => {\r\n    const [loading, setLoading] = useState(true);\r\n\r\n    const [selectedId, setSelectedId] = useState(null);\r\n\r\n    const emailNameInputRef=useRef(null)\r\n\r\n    const [data, setData] = useState([]);\r\n\r\n    useEffect(() => {\r\n        const endpoint =\r\n          process.env.NODE_ENV === \"production\"\r\n            ? endpoints.responses.production\r\n            : endpoints.responses.development;\r\n        axios\r\n          .get(endpoint)\r\n          .then((response) => {\r\n            const jsonData = xmlJs.xml2json(response.data, { compact: true, spaces: 4 });\r\n            const parsedData = JSON.parse(jsonData);\r\n            if (parsedData && parsedData.question_responses && parsedData.question_responses.question_response) {\r\n              const records = parsedData.question_responses.question_response;\r\n              setData(records);\r\n            } else {\r\n            console.error('Invalid question_responses data structure');\r\n            }\r\n            setLoading(false);\r\n          })\r\n          .catch(() => {\r\n            toast.error(\"Error fetching qusetion\");\r\n          });\r\n      }, []);\r\n        \r\n\r\n\r\n      const columns = [\r\n        {\r\n          name: 'Full Name',\r\n          selector: (row) => row.full_name?._text,\r\n          sortable: true,\r\n          searchable: true, // Enable searching for this column\r\n        },\r\n        {\r\n          name: 'Email Address',\r\n          selector: (row) => row.email_address?._text,\r\n          sortable: true,\r\n          searchable: true, // Enable searching for this column\r\n        },\r\n        {\r\n          name: 'Description',\r\n          selector: (row) => row.description?._text,\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Gender',\r\n          selector: (row) => row.gender?._text,\r\n          sortable: true,\r\n          searchable: true, // Enable searching for this column\r\n        },\r\n        {\r\n          name: 'Programming Stacks',\r\n          selector: (row) => row.programming_stack?._text,\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Certificates',\r\n          selector: (row) => {\r\n            const certificates = row.certificates?.certificate;\r\n            if (certificates) {\r\n              if (Array.isArray(certificates)) {\r\n                return certificates.map((certificate) => (\r\n                  <span key={certificate._attributes.id}>\r\n                    {certificate._text}\r\n                    <br />\r\n                  </span>\r\n                ));\r\n              } else {\r\n                return (\r\n                  <span key={certificates._attributes.id}>\r\n                    {certificates._text}\r\n                    <br />\r\n                  </span>\r\n                );\r\n              }\r\n            }\r\n            return '';\r\n          },\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Date Responded',\r\n          selector: (row) => row.date_responded?._text,\r\n          sortable: true,\r\n        },\r\n        {\r\n          name: 'Select',\r\n          cell: (row) => (\r\n            <Link to=\"#\" data-bs-toggle=\"modal\"  onClick={() => handleSelect(row.id?._text,row.id?._text)} data-bs-target=\"#myModal\" rel=\"noreferrer\">\r\n              <FontAwesomeIcon icon={faFilePdf} /> Certificates\r\n            </Link>\r\n          ),\r\n        },\r\n      ];\r\n    \r\n      const handleSelect = (id) => {\r\n         setSelectedId(id);\r\n      };\r\n\r\n\r\n      const paginationOptions = {\r\n          rowsPerPageText: 'Rows per page:',\r\n          rangeSeparatorText: 'of',\r\n          selectAllRowsItem: true,\r\n          selectAllRowsItemText: 'All',\r\n      };\r\n\r\n      useEffect(() => {\r\n          if(emailNameInputRef.current){\r\n              emailNameInputRef.current.focus();\r\n          }\r\n        }, []);\r\n\r\n    return (<>\r\n        {loading ? (\r\n          <List />\r\n        ) : (<>\r\n            <Link to=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#email-search-modal\" rel=\"noreferrer\" className=\"float\" title='filter by email address'>\r\n                <FontAwesomeIcon className=\"my-float\" icon={faSearch} />\r\n            </Link>\r\n            <EmailSearch setData={setData}/>    \r\n          <DataTable\r\n            columns={columns}\r\n            data={data}\r\n            pagination\r\n            paginationComponentOptions={paginationOptions}\r\n          />\r\n            <CertificatesModal certificateId={selectedId}/>\r\n      )}\r\n        </>)}\r\n      <Toaster/>\r\n    </>\r\n    );\r\n};\r\n\r\nexport default SurveyResponse;","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport SurveyForm from '../Form/SurveyForm'\r\nimport {useDispatch } from \"react-redux\";\r\nimport { setFormState,setPercentage } from \"../../States/FormState\";\r\nimport { updateUsersData } from \"../../States/FormState\";\r\nimport SurveyResponse from '../Form/SurveyResponse';\r\n\r\nfunction Home() {\r\n    const dispatch = useDispatch();\r\n    const handleButtonClick=()=>{\r\n        dispatch(setFormState(1));\r\n        dispatch(updateUsersData(null))\r\n        dispatch(setPercentage(33.33))\r\n    }\r\n  return (\r\n    <>\r\n        <div className=\"container-fluid full-height\">\r\n            <div className=\"row row-height\">\r\n                <div className=\"col-lg-6 content-left\">\r\n                    <div className=\"content-left-wrapper\">\r\n                        <Link to=\"/\" id=\"logo\"  rel=\"noreferrer\"><img src=\"/static/assets/img/logo.png\" alt=\"\" width=\"49\" height=\"35\"/></Link>\r\n                        <div id=\"social\">\r\n                            <ul>\r\n                                <li><a href=\"https://facebook.com\" ><i className=\"icon-facebook\"></i></a></li>\r\n                                <li><a href=\"https://twitter.com\"><i className=\"icon-twitter\"></i></a></li>\r\n                                <li><a href=\"https://instagram.com\"><i className=\"icon-instagram\"></i></a></li>\r\n                                <li><a href=\"https://linkedin.com\"><i className=\"icon-linkedin\"></i></a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <figure><img src=\"static/assets/img/info_graphic_1.svg\" alt=\"\" className=\"img-fluid\"/></figure>\r\n                            <h2>OpinionHarbor Survey</h2>\r\n                            <p>Discover, Share, and Influence. Welcome to OpinionHarbor, where your opinions matter. Take part in surveys that impact industries, shape products, and influence change. Join a community of voices, express your thoughts, and help build a better tomorrow.</p>\r\n                            <button type=\"button\" className=\"btn_1 rounded\" target=\"_parent\" onClick={handleButtonClick}>Start Your Survey</button>\r\n                        </div>\r\n                        <div className=\"copy\">&copy; {new Date().getFullYear()} OpinionHarbor. All Rights Reserved</div>\r\n                    </div>\r\n                </div>\r\n                {/* <Form/> */}\r\n                <div className=\"col-lg-6 content-right\" id=\"start\">\r\n                <div className=\"tabs\">\r\n                    <div className=\"tab-2\">\r\n                        <label className=\"label\" htmlFor=\"tab2-1\">Survey Form</label>\r\n                        <input id=\"tab2-1\" name=\"tabs-two\" type=\"radio\" checked=\"checked\" onChange={()=>{}}/>\r\n                        <div>\r\n                            <SurveyForm/>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"tab-2\">\r\n                        <label className=\"label\" htmlFor=\"tab2-2\">Survey Response</label>\r\n                        <input id=\"tab2-2\" name=\"tabs-two\" type=\"radio\" onChange={()=>{}}/>\r\n                        <div >\r\n                            <SurveyResponse/>\r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home"],"names":["_jsx","className","id","tabIndex","role","children","_jsxs","type","Loader","ContentLoader","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","_ref","setStepValid","setFinalFormData","fullNameInputRef","useRef","question","setQuestion","useState","loading","setLoading","formData","setFormData","full_name","terms","validations","setValidations","errors","setErrors","useEffect","isAnyFieldEmpty","Object","values","some","value","isFormValid","every","valid","handleInputChange","e","name","checked","target","errorMessage","prevFormData","current","focus","endpoint","endpoints","questions","production","axios","get","then","response","jsonData","xmlJs","data","compact","spaces","parsedData","JSON","parse","_attributes","extractedInfo","text","_text","description","console","error","catch","toast","_Fragment","concat","placeholder","title","onChange","ref","required","htmlFor","Link","to","rel","Modal","Toaster","emailInputRef","email_address","test","descriptionInputRef","spellCheck","genderOptions","setGenderOptions","gender","options","map","option","charAt","toUpperCase","slice","programmingStackOptions","setProgrammingStackOptions","selectedProgrammingStack","setSelectedProgrammingStack","programmingStackError","setProgrammingStackError","programming_stack","isProgrammingStackValid","length","updatedData","join","handleProgrammingStackChange","filter","stack","selectedCertificates","setSelectedCertificates","certificatesError","setCertificatesError","isCertificatesValid","file","certificate","accept","multiple","files","state","useSelector","formState","usersData","dispatch","useDispatch","setFormState","index","href","url","FontAwesomeIcon","icon","faFilePdf","style","color","marginLeft","message","icons","success","faCheckCircle","faExclamationCircle","info","faInfoCircle","toastStyle","padding","borderRadius","display","alignItems","marginRight","formRef","isExploding","setIsExploding","stepState","finalFormData","stepValid","handleNext","setPercentage","percentage","handlePrevious","keys","updateUsersData","encType","onSubmit","preventDefault","Step1","Step2","Step3","Step4","Step5","Step6","Overall1","Overall2","onClick","disabled","React","ReactConfirmPopup","trigger","confirmText","cancelText","onConfirmClicked","handleConfirmClicked","FormData","responses","append","forEach","put","headers","status","setTimeout","errorMessages","undefined","key","messagesForCurrentKey","capitalizedKey","Array","isArray","onCancelClicked","custom","t","CustomToast","ConfettiExplosion","setData","modalRef","closeModal","click","question_responses","question_response","records","numberOfRecords","float","marginBottom","trim","prevErrors","certificateId","downloading","setDownLoading","certificates","columns","selector","row","sortable","searchable","cell","faDownload","handleCancelClicked","download","contentType","toLowerCase","includes","blob","Blob","link","document","createElement","window","URL","createObjectURL","body","appendChild","removeChild","List","DataTable","pagination","paginationComponentOptions","rowsPerPageText","rangeSeparatorText","selectAllRowsItem","selectAllRowsItemText","SurveyResponse","selectedId","setSelectedId","emailNameInputRef","_row$full_name","_row$email_address","_row$description","_row$gender","_row$programming_stac","_row$certificates","_row$date_responded","date_responded","_row$id","_row$id2","handleSelect","faSearch","EmailSearch","CertificatesModal","src","alt","handleButtonClick","Date","getFullYear","SurveyForm"],"sourceRoot":""}