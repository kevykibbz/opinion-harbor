{"version":3,"file":"static/js/424.415652db.chunk.js","mappings":"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","sources":["Components/Form/Modal/Modal.jsx","Components/Form/Steps/Step1.jsx","Components/Form/Loader/Loader.jsx","Components/Endpoints/Endpoints.jsx","Components/Form/Steps/Step2.jsx","Components/Form/Steps/Step3.jsx","Components/Form/Steps/Overall.jsx","Components/Form/Toast/CustomToast.jsx","Components/Form/Form.jsx","Components/Home/Home.jsx"],"sourcesContent":["import React from 'react'\r\n\r\nfunction Modal() {\r\n  return (\r\n    <div className=\"modal fade\" id=\"terms-txt\" tabIndex=\"-1\" role=\"dialog\" aria-labelledby=\"termsLabel\" aria-hidden=\"true\">\r\n\t\t<div className=\"modal-dialog modal-dialog-centered\">\r\n\t\t\t<div className=\"modal-content\">\r\n\t\t\t\t<div className=\"modal-header\">\r\n\t\t\t\t\t<h4 className=\"modal-title\" id=\"termsLabel\">Terms and conditions</h4>\r\n\t\t\t\t\t<button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"modal-body\">\r\n                    <h6>1. Acceptance of Terms</h6>\r\n\t\t\t\t\t<p>By accessing and using OpinionHarbor, you agree to comply with and be bound by these Terms and Conditions. If you do not agree with these Terms and Conditions, please do not use this Website.</p>\r\n                    <h6>2. User Registration</h6>\r\n\t\t\t\t\t<ul>\r\n\t\t\t\t\t\t<li><b>a</b><p> To participate in surveys and use certain features of the Website, you may be required to register an account. You agree to provide accurate and up-to-date information during the registration process, including your name, email address, and any other requested information.</p></li>\r\n\t\t\t\t\t\t<li><b>b</b><p>You are responsible for maintaining the confidentiality of your account credentials, and you are solely responsible for all activities that occur under your account.</p></li>\r\n                    </ul>\r\n                    <h6>3. User Content</h6>\r\n                    <p>You may be asked to submit information and content, including your name, programming stack languages, gender, certificates, and a brief description of yourself. You retain ownership of the content you provide</p>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className=\"modal-footer\">\r\n\t\t\t\t\t<button type=\"button\" className=\"btn_1\" data-bs-dismiss=\"modal\">Close</button>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n  )\r\n}\r\n\r\nexport default Modal","import React, { useState, useEffect,useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nfunction Step1({ setFormValid, setFinalFormData }) {\r\n  const fullNameInputRef = useRef(null);\r\n  \r\n  const [formData, setFormData] = useState({\r\n    full_name: \"\",\r\n    email_address: \"\",\r\n    terms: false, \r\n  });\r\n\r\n  const [validations, setValidations] = useState({\r\n    full_name: true,\r\n    email_address: true,\r\n    terms: true, \r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    full_name: \"\",\r\n    email_address: \"\",\r\n    terms: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Check if any input field is empty\r\n    const isAnyFieldEmpty = Object.values(formData).some((value) => value === \"\");\r\n\r\n    // Set form validity based on input validations and whether any field is empty\r\n    const isFormValid = Object.values(validations).every((valid) => valid) && !isAnyFieldEmpty;\r\n\r\n    setFormValid(isFormValid);\r\n  }, [formData, validations, setFormValid]);\r\n\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n  \r\n    let errorMessage = \"\";\r\n  \r\n    if (name === \"email_address\") {\r\n      if (!value) {\r\n        errorMessage = \"This field is required.\";\r\n      } else {\r\n        const emailPattern = /^[a-zA-Z0-9._-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/;\r\n        const isValid = emailPattern.test(value);\r\n  \r\n        if (!isValid) {\r\n          errorMessage = \"Please enter a valid email address.\";\r\n        }\r\n      }\r\n  \r\n      setValidations({\r\n        ...validations,\r\n        [name]: !errorMessage,\r\n      });\r\n\r\n    } else {\r\n      if (!value) {\r\n        errorMessage = \"This field is required.\";\r\n      } else if (type === \"checkbox\") {\r\n        errorMessage = checked ? \"\" : \"Please accept the Terms and Conditions\";\r\n  \r\n        setValidations({\r\n          ...validations,\r\n          [name]: checked,\r\n        });\r\n      }\r\n    \r\n      setValidations({\r\n        ...validations,\r\n        [name]: !errorMessage,\r\n      });\r\n    }\r\n  \r\n    setErrors({\r\n      ...errors,\r\n      [name]: errorMessage,\r\n    });\r\n  \r\n    setFormData({\r\n      ...formData,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    });\r\n  \r\n    const isFormValid = Object.values(validations).every((valid) => valid);\r\n    setFormValid(isFormValid);\r\n\r\n    // Call setFinalFormData with the updated form data\r\n    setFinalFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n\r\n  };\r\n  \r\n  \r\n  \r\n  useEffect(() => {\r\n    fullNameInputRef.current.focus();\r\n  }, []);\r\n  \r\n  \r\n  return (\r\n    <>\r\n      <div className=\"summary step\">\r\n        <h3 className=\"main_question\">\r\n          <strong>1/3</strong>Basic details\r\n        </h3>\r\n        <ul>\r\n          <li>\r\n            <strong>1</strong>\r\n            <div className=\"form-group\">\r\n              <label>First Name</label>\r\n              <input\r\n                type=\"text\"\r\n                name=\"full_name\"\r\n                className={`form-control required ${\r\n                  !validations.full_name ? \"is-invalid \" : \"\"\r\n                }`}\r\n                placeholder=\"What is your full name\"\r\n                title=\"[Surname] [First name] [Other Names]\"\r\n                value={formData.full_name}\r\n                onChange={handleInputChange}\r\n                ref={fullNameInputRef}\r\n              />\r\n              {errors.full_name && (\r\n                <div className=\"invalid-feedback\">{errors.full_name}</div>\r\n              )}\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <strong>2</strong>\r\n            <div className=\"form-group\">\r\n              <label>Email Address</label>\r\n              <input\r\n                type=\"email\"\r\n                name=\"email_address\"\r\n                className={`form-control required ${\r\n                  !validations.email_address ? \"is-invalid \" : \"\"\r\n                }`}\r\n                placeholder=\"What is your email address\"\r\n                value={formData.email_address}\r\n                onChange={handleInputChange}\r\n              />\r\n              {errors.email_address && (\r\n                <div className=\"invalid-feedback\">{errors.email_address}</div>\r\n              )}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n        <div className=\"form-check form-group terms\">\r\n          <label className=\" form-check-label container_check\" htmlFor=\"invalidCheck3\">\r\n            Please accept our{\" \"}\r\n            <Link to=\"#\" data-bs-toggle=\"modal\" data-bs-target=\"#terms-txt\" rel=\"noreferrer\">\r\n              {\" \"}\r\n              Terms and conditions\r\n            </Link>\r\n            <input\r\n              type=\"checkbox\"\r\n              name=\"terms\"\r\n              id=\"invalidCheck3\"\r\n              aria-describedby=\"invalidFeedbackCheck3\"\r\n              checked={formData.terms}\r\n              onChange={handleInputChange}\r\n              required\r\n              className={`form-check-input required ${!validations.terms ? \"is-invalid \" : \"\"}`}\r\n            />\r\n            <span className=\"checkmark\"></span>\r\n          </label>\r\n          {errors.terms && <div id=\"invalidFeedbackCheck3\" className=\"invalid-feedback\">{errors.terms}</div>}\r\n        </div>\r\n      </div>\r\n      <Modal />\r\n    </>\r\n  );\r\n}\r\nexport default Step1;","import ContentLoader from \"react-content-loader\";\r\n\r\nconst Loader = () => (\r\n    <ContentLoader\r\n      speed={2}\r\n      width={200}\r\n      height={50}\r\n      viewBox=\"0 0 200 50\"\r\n      backgroundColor=\"#f3f3f3\"\r\n      foregroundColor=\"#ecebeb\"\r\n    >\r\n      <rect x=\"0\" y=\"15\" rx=\"5\" ry=\"5\" width=\"150\" height=\"10\" />\r\n      <rect x=\"0\" y=\"30\" rx=\"5\" ry=\"5\" width=\"100\" height=\"10\" />\r\n    </ContentLoader>\r\n  );\r\n\r\nexport default Loader;","const endpoints={\r\n    \"options\":{\r\n        \"production\":\"http://127.0.0.1:8000/api/options\",\r\n        \"development\":\"http://127.0.0.1:8000/api/options\",\r\n        \r\n    },\r\n    \"responses\":{\r\n        \"production\":\"http://127.0.0.1:8000/api/questions/responses\",\r\n        \"development\":\"http://127.0.0.1:8000/api/questions/responses\",\r\n    }\r\n}\r\nexport default endpoints","import React, { useState, useEffect,useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport endpoints from \"../../Endpoints/Endpoints\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nfunction Step2({ setStepTwoValid,setFinalFormData }) {\r\n  const descriptionInputRef = useRef(null);\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n\r\n  const [genderOptions, setGenderOptions] = useState([]);\r\n\r\n  const [formData, setFormData] = useState({\r\n    description: \"\",\r\n    gender: \"\",\r\n  });\r\n\r\n  const [validations, setValidations] = useState({\r\n    description: true,\r\n    gender: true,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({\r\n    description: \"\",\r\n    gender: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Check if any input field is empty\r\n    const isAnyFieldEmpty = Object.values(formData).some((value) => value === \"\");\r\n\r\n    // Set form validity based on input validations and whether any field is empty\r\n    const isFormValid = Object.values(validations).every((valid) => valid) && !isAnyFieldEmpty;\r\n\r\n    setStepTwoValid(isFormValid);\r\n  }, [formData, validations, setStepTwoValid]);\r\n\r\n  useEffect(() => {\r\n    const endpoint =\r\n      process.env.NODE_ENV === \"production\"\r\n        ? endpoints.options.production\r\n        : endpoints.options.development;\r\n    axios\r\n      .get(endpoint)\r\n      .then((response) => {\r\n        setGenderOptions(response.data.gender);\r\n        setLoading(false);\r\n      })\r\n      .catch((error) => {\r\n        toast.error(\"Error fetching gender options\");\r\n      });\r\n  }, []);\r\n\r\n  const handleInputChange = (e) => {\r\n    const { name, value } = e.target;\r\n\r\n    let errorMessage = \"\";\r\n\r\n    if (name === \"gender\") {\r\n      if (!value) {\r\n        errorMessage = \"Please select a gender.\";\r\n      }\r\n\r\n      setValidations({\r\n        ...validations,\r\n        [name]: !errorMessage,\r\n      });\r\n    } else {\r\n      if (!value) {\r\n        errorMessage = \"This field is required.\";\r\n      }\r\n\r\n      setValidations({\r\n        ...validations,\r\n        [name]: !errorMessage,\r\n      });\r\n    }\r\n\r\n    setErrors({\r\n      ...errors,\r\n      [name]: errorMessage,\r\n    });\r\n\r\n    setFormData({\r\n      ...formData,\r\n      [name]: value,\r\n    });\r\n\r\n    const isFormValid = Object.values(validations).every((valid) => valid);\r\n    setStepTwoValid(isFormValid);\r\n\r\n    // Call setFinalFormData with the updated form data\r\n    setFinalFormData((prevFormData) => ({\r\n      ...prevFormData,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    descriptionInputRef.current.focus();\r\n  }, []);\r\n  \r\n\r\n  return (\r\n    <>\r\n      <div className=\"summary step\">\r\n        <h3 className=\"main_question\">\r\n          <strong>2/3</strong>General Description\r\n        </h3>\r\n        <ul>\r\n          <li>\r\n            <strong>3</strong>\r\n            <div className=\"form-group\">\r\n              <label>Description</label>\r\n              <textarea\r\n                name=\"description\"\r\n                className={`form-control required ${\r\n                  !validations.description ? \"is-invalid \" : \"\"\r\n                }`}\r\n                rows={30}\r\n                cols={30}\r\n                placeholder=\"Tell us a bit more about yourself\"\r\n                value={formData.description}\r\n                onChange={handleInputChange}\r\n                ref={descriptionInputRef}\r\n\r\n              />\r\n              {errors.description && (\r\n                <div className=\"invalid-feedback\">{errors.description}</div>\r\n              )}\r\n            </div>\r\n          </li>\r\n          <li>\r\n            <strong>4</strong>\r\n            <div className=\"form-group\">\r\n              <label>Gender</label>\r\n              <br />\r\n              {loading ? (\r\n                <>\r\n                  <Loader />\r\n                  <br />\r\n                  <Loader />\r\n                  <br />\r\n                  <Loader />\r\n                </>\r\n              ) : (\r\n                <div className=\"form-group\">\r\n                  {genderOptions.map((option) => (\r\n                    <label\r\n                      key={option.id}\r\n                      className=\"container_radio version_2\"\r\n                    >\r\n                      {option.option.charAt(0).toUpperCase() + option.option.slice(1)}\r\n                      <input\r\n                        type=\"radio\"\r\n                        name=\"gender\"\r\n                        value={option.option}\r\n                        className=\"required\"\r\n                        onChange={handleInputChange}\r\n                      />\r\n                      <span className=\"checkmark\"></span>\r\n                    </label>\r\n                  ))}\r\n                </div>\r\n              )}\r\n              {errors.gender && (\r\n                <div className=\"invalid-feedback\">{errors.gender}</div>\r\n              )}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <Toaster />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Step2;","import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Loader from \"../Loader/Loader\";\r\nimport endpoints from \"../../Endpoints/Endpoints\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\n\r\nfunction Step3({ setStepThreeValid,setFinalFormData }) {\r\n\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  const [programmingStackOptions, setProgrammingStackOptions] = useState([]);\r\n\r\n  const [selectedProgrammingStack, setSelectedProgrammingStack] = useState([]);\r\n\r\n  const [selectedCertificates, setSelectedCertificates] = useState([]);\r\n\r\n  const [programmingStackError, setProgrammingStackError] = useState(\"\");\r\n\r\n  const [certificatesError, setCertificatesError] = useState(\"\");\r\n\r\n\r\n  const endpoint =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? endpoints.options.production\r\n      : endpoints.options.development;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(endpoint)\r\n      .then((response) => {\r\n        setProgrammingStackOptions(response.data.programming_stack);\r\n        setLoading(false);\r\n      })\r\n      .catch(() => {\r\n        toast.error(\"Error fetching programming stack options\");\r\n      });\r\n  }, [endpoint]);\r\n\r\n  useEffect(() => {\r\n    // Check if at least one programming language is selected\r\n    const isProgrammingStackValid = selectedProgrammingStack.length > 0;\r\n    setProgrammingStackError(isProgrammingStackValid ? \"\" : \"Choose at least one programming language\");\r\n\r\n    // Check if certificates field has valid PDF files\r\n    const isCertificatesValid = selectedCertificates.every((file) =>\r\n      file.type === \"application/pdf\"\r\n    );\r\n    setCertificatesError(isCertificatesValid ? \"\" : \"Upload only PDF files\");\r\n\r\n    // Set form validity based on validations\r\n    const isFormValid = isProgrammingStackValid && isCertificatesValid;\r\n    setStepThreeValid(isFormValid);\r\n\r\n\r\n  // Create updated data directly\r\n  const updatedData = {\r\n    programming_stack: isProgrammingStackValid ? selectedProgrammingStack.join(',') : '',\r\n    certificate: isCertificatesValid ? selectedCertificates : '',\r\n  };\r\n\r\n  // console.log(\"updatedData\", updatedData)\r\n\r\n  // Update finalFormData using setFinalFormData prop\r\n  setFinalFormData((prevFormData) => ({\r\n    ...prevFormData,\r\n    ...updatedData,\r\n  }));\r\n\r\n  }, [selectedProgrammingStack, setFinalFormData,selectedCertificates, setStepThreeValid]);\r\n\r\n\r\n  const handleProgrammingStackChange = (e) => {\r\n    const value = e.target.value;\r\n    if (e.target.checked) {\r\n      setSelectedProgrammingStack([...selectedProgrammingStack, value]);\r\n    } else {\r\n      setSelectedProgrammingStack(selectedProgrammingStack.filter((stack) => stack !== value));\r\n    }\r\n    \r\n  };\r\n\r\n  const handleCertificatesChange = (e) => {\r\n    const files = e.target.files;\r\n    setSelectedCertificates([...files]);\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n      <div className=\"summary step\">\r\n        <h3 className=\"main_question\">\r\n          <strong>3/3</strong>Programming stacks and Certificates\r\n        </h3>\r\n        <ul>\r\n          <li>\r\n            <strong>5</strong>\r\n            <div className=\"column-container\">\r\n              {loading ? (\r\n                <>\r\n                  <Loader />\r\n                  <br />\r\n                  <Loader />\r\n                  <br />\r\n                  <Loader />\r\n                  <br />\r\n                  <Loader />\r\n                  <br />\r\n                  <Loader />\r\n                </>\r\n              ) : (\r\n                programmingStackOptions.map((option) => (\r\n                 <div key={option.id} className=\"form-check\">\r\n                   <label htmlFor={`form-check-${option.id}`} className=\"form-check-label container_radio version_2\">\r\n                   {option.option.charAt(0).toUpperCase() + option.option.slice(1)}\r\n                    <input\r\n                      type=\"checkbox\"\r\n                      id={`form-check-${option.id}`}\r\n                      name=\"programming_stack\"\r\n                      className={`form-check-input ${\r\n                        programmingStackError ? \"is-invalid \" : \"\"\r\n                      }`}\r\n                      value={option.option}\r\n                      onChange={handleProgrammingStackChange}\r\n                    />\r\n                    <span className=\"checkmark\"></span>\r\n                  </label>\r\n                 </div>\r\n               ))\r\n              )}\r\n            </div>\r\n            {programmingStackError && (\r\n              <div className=\"error-message text-danger\">{programmingStackError}</div>\r\n            )}\r\n          </li>\r\n          <li>\r\n            <strong>6</strong>\r\n            <div className=\"form-group\">\r\n              <label>Upload your certificates</label>\r\n              <input\r\n                type=\"file\"\r\n                name=\"certificate\"\r\n                required=\"required\"\r\n                className={`form-control required ${\r\n                  certificatesError ? \"is-invalid \" : \"\"\r\n                }`}\r\n                placeholder=\"Upload your certificates\"\r\n                accept=\".pdf\"\r\n                title=\"You can upload multiple (.pdf)\"\r\n                multiple\r\n                onChange={handleCertificatesChange}\r\n              />\r\n              {certificatesError && (\r\n                <div className=\"error-message invalid-feedback\">{certificatesError}</div>\r\n              )}\r\n            </div>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      <Toaster />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Step3;","import React, { useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faFilePdf } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setFormState } from \"../../../States/FormState\";\r\n\r\nfunction Overall() {\r\n  const state = useSelector((state) => state.formState.usersData);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if(state === null){\r\n      dispatch(setFormState(1));\r\n    }\r\n   \r\n  }, [state,dispatch]); \r\n\r\n  return (\r\n    <div className=\"submit step\">\r\n      <h3 className=\"main_question\">\r\n        <strong>3/3</strong> Summary\r\n      </h3>\r\n      <div className=\"summary\">\r\n        <ul>\r\n          <li>\r\n            <strong>1</strong>\r\n            <h5>\r\n            What is your full name?\r\n            </h5>\r\n            {state.full_name && <p>{state.full_name}</p>}\r\n          </li>\r\n          <li>\r\n            <strong>2</strong>\r\n            <h5>What is your email address</h5>\r\n            {state.email_address && <p>{state.email_address}</p>}\r\n          </li>\r\n          <li>\r\n            <strong>3</strong>\r\n            <h5>Description</h5>\r\n           {state.description && <p>{state.description}</p>}\r\n          </li>\r\n          <li>\r\n            <strong>4</strong>\r\n            <h5>Gender</h5>\r\n            {state.gender && <p>{state.gender}</p>}\r\n          </li>\r\n          <li>\r\n            <strong>5</strong>\r\n            <h5>Programming stacks</h5>\r\n            {state.programming_stack && <p>{state.programming_stack}</p>}\r\n          </li>\r\n          <li>\r\n            <strong>6</strong>\r\n            <h5>Certificates</h5>\r\n            {state.certificate && state.certificate.map((certificate, index) => (\r\n              <div key={index}>\r\n               <p>\r\n                  {`${index + 1} : `}\r\n                  <a href={certificate.url} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    <FontAwesomeIcon icon={faFilePdf} style={{ color: \"#FF0000\", marginLeft: \"5px\" }} />\r\n                    {\" \"}\r\n                    {certificate.name}\r\n                  </a>\r\n                </p>\r\n              </div>\r\n            ))}\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Overall;\r\n","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faInfoCircle, faCheckCircle, faExclamationCircle } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst CustomToast = ({ type, message }) => {\r\n  const icons = {\r\n    success: faCheckCircle,\r\n    error: faExclamationCircle,\r\n    info: faInfoCircle,\r\n  };\r\n\r\n  const toastStyle = {\r\n    backgroundColor: type === 'info' ? '#d63384' : '',\r\n    color: 'white', \r\n    padding: '1rem',\r\n    borderRadius: '0.25rem',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n  };\r\n\r\n  return (\r\n    <div style={toastStyle}>\r\n      <FontAwesomeIcon icon={icons[type]} style={{ marginRight: '0.5rem' }} />\r\n      {message}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CustomToast;\r\n","import React,{useState,useRef,useEffect} from \"react\";\r\nimport Step1 from \"./Steps/Step1\";\r\nimport Step2 from \"./Steps/Step2\";\r\nimport Step3 from \"./Steps/Step3\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport Overall from \"./Steps/Overall\";\r\nimport { formState,setFormState,setPercentage } from \"../../States/FormState\";\r\nimport { updateUsersData } from \"../../States/FormState\";\r\nimport ReactConfirmPopup from \"react-confirm-popup\";\r\nimport toast, { Toaster } from \"react-hot-toast\";\r\nimport CustomToast from './Toast/CustomToast';\r\nimport ConfettiExplosion from 'react-confetti-explosion';\r\nimport axios from \"axios\";\r\nimport endpoints from \"../Endpoints/Endpoints\";\r\n\r\n\r\nfunction Form() {\r\n  const formRef = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const [isExploding, setIsExploding] = useState(false);\r\n  const stepState = useSelector(formState);\r\n  const [finalFormData, setFinalFormData] = useState(null);\r\n  const [formValid, setFormValid] = useState(false);\r\n  const [stepTwoValid, setStepTwoValid] = useState(false);\r\n  const [stepThreeValid, setStepThreeValid] = useState(false);\r\n  const usersData = useSelector((state) => state.formState.usersData);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNext = () => {\r\n    if (stepState.stepState < 4) {\r\n      dispatch(setFormState(stepState.stepState + 1));\r\n      dispatch(setPercentage(stepState.percentage + 33.33))\r\n    }\r\n  };\r\n\r\n  const handlePrevious = () => {\r\n    if (stepState.stepState > 1) {\r\n      dispatch(setFormState(stepState.stepState - 1));\r\n      dispatch(setPercentage(stepState.percentage - 33.33))\r\n    }\r\n  };\r\n  \r\n  const handleConfirmClicked = () => {\r\n    if(usersData){\r\n      const formData = new FormData();\r\n    const endpoint =\r\n    process.env.NODE_ENV === \"production\"\r\n      ? endpoints.responses.production\r\n      : endpoints.responses.development;\r\n\r\n      formData.append('full_name', usersData.full_name);\r\n      formData.append('email_address', usersData.email_address);\r\n      formData.append('description', usersData.description);\r\n      formData.append('gender',  usersData.gender);\r\n      formData.append('programming_stack',  usersData.programming_stack);\r\n      usersData.certificate.forEach((certificate, index) => {\r\n        formData.append('certificate', certificate);\r\n      });\r\n      setLoading(true);\r\n    axios\r\n    .put(endpoint, formData,{\r\n      headers: {\r\n        'Content-Type': 'multipart/form-data', \r\n      },\r\n    })\r\n    .then((response) => {\r\n      setLoading(false);\r\n      if(response.status === 200){\r\n        toast.success(\"Survey data submitted successfully\");\r\n        setIsExploding(true);\r\n        setTimeout(() => {\r\n          setIsExploding(false);\r\n        }, 5000);\r\n      }\r\n    })\r\n    .catch((error) => {\r\n      setLoading(false);\r\n      const errorMessages = error.response.data.errors;\r\n      if (error.response.data.errors !== undefined) {\r\n        Object.keys(errorMessages).forEach((key) => {\r\n          const messagesForCurrentKey = errorMessages[key];\r\n          const capitalizedKey = key.charAt(0).toUpperCase() + key.slice(1);\r\n      \r\n          if (Array.isArray(messagesForCurrentKey)) {\r\n            messagesForCurrentKey.forEach((message) => {\r\n              toast.error(`${capitalizedKey}: ${message}`);\r\n            });\r\n          } else {\r\n            toast.error(`${capitalizedKey}: ${messagesForCurrentKey}`);\r\n          }\r\n        });\r\n      }else{\r\n        toast.error(error.response.data.message);\r\n      }\r\n    });\r\n    }else{\r\n      dispatch(setFormState(1));\r\n    }\r\n  }\r\n\r\n  const handleFormSubmit = (e) => {\r\n    e.preventDefault();\r\n  }\r\n\r\n  const handleCancelClicked=(e)=>{\r\n    toast.custom((t) => <CustomToast type=\"info\" message=\"You have cancelled the submission of your survey data.\" />);\r\n  }\r\n\r\n  useEffect(()=>{\r\n    if(finalFormData !==null && typeof finalFormData === 'object'){\r\n      const keyLength=Object.keys(finalFormData).length\r\n      if(keyLength === 7){\r\n        dispatch(updateUsersData(finalFormData))\r\n      }\r\n    }\r\n  },[finalFormData,dispatch])\r\n\r\n  return (<>\r\n    <div id=\"wizard_container\">\r\n      <div id=\"top-wizard\">\r\n        <div\r\n          id=\"progressbar\"\r\n          className=\"ui-progressbar ui-widget ui-widget-content ui-corner-all\"\r\n          role=\"progressbar\"\r\n          aria-valuemin=\"0\"\r\n          aria-valuemax=\"100\"\r\n          aria-valuenow={stepState.percentage}\r\n        >\r\n          <div\r\n            className=\"ui-progressbar-value ui-widget-header ui-corner-left\"\r\n            style={{width:`${stepState.percentage}%`}}\r\n          ></div>\r\n        </div>\r\n      </div>\r\n      <form id=\"wrapped\" encType=\"multipart/form-data\" onSubmit={handleFormSubmit} ref={formRef}>\r\n        <div id=\"middle-wizard\">\r\n          {stepState.stepState === 1 && <Step1 setFormValid={setFormValid} setFinalFormData={setFinalFormData}/>}\r\n          {stepState.stepState === 2 && <Step2 setStepTwoValid={setStepTwoValid} setFinalFormData={setFinalFormData}/>}\r\n          {stepState.stepState === 3 && <Step3 setStepThreeValid={setStepThreeValid} setFinalFormData={setFinalFormData}/>}\r\n          {stepState.stepState !== 1 && stepState.stepState !== 2 && stepState.stepState !== 3 && <Overall />}\r\n        </div>\r\n        <div id=\"bottom-wizard\">\r\n          {stepState.stepState === 1 ? (\r\n            <button\r\n              type=\"button\"\r\n              name=\"forward\"\r\n              className=\"forward\"\r\n              onClick={handleNext}\r\n              disabled={!formValid}\r\n            >\r\n              Next\r\n            </button>\r\n          ) : stepState.stepState === 2 ? (\r\n            <React.Fragment>\r\n              <button\r\n                type=\"button\"\r\n                name=\"backward\"\r\n                className=\"backward\"\r\n                onClick={handlePrevious}\r\n              >\r\n                Prev\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                name=\"forward\"\r\n                className=\"forward\"\r\n                onClick={handleNext}\r\n                disabled={!stepTwoValid}\r\n              >\r\n                Next\r\n              </button>\r\n            </React.Fragment>\r\n          ) : stepState.stepState === 3 ? (\r\n            <React.Fragment>\r\n              <button\r\n                type=\"button\"\r\n                name=\"backward\"\r\n                className=\"backward\"\r\n                onClick={handlePrevious}\r\n              >\r\n                Prev\r\n              </button>\r\n              <button type=\"button\" name=\"forward\" className=\"forward\" disabled={!stepThreeValid} onClick={handleNext}>\r\n                Continue\r\n              </button>\r\n            </React.Fragment>\r\n          ) : (\r\n            <React.Fragment>\r\n              <button\r\n                type=\"button\"\r\n                name=\"backward\"\r\n                className=\"backward\"\r\n                onClick={handlePrevious}\r\n              >\r\n                Prev\r\n              </button>\r\n              {/* <button type=\"submit\" name=\"process\" className=\"submit\" >\r\n                Submit\r\n              </button> */}\r\n              <ReactConfirmPopup trigger={\r\n              <button type=\"submit\" name=\"process\" className=\"submit\"  >\r\n                {loading ? (\r\n                  <>\r\n                    <i className=\"fa fa-spinner-third fa-solid\"></i>\r\n                    {\"Submitting...\"}\r\n                  </>\r\n                ) : (\r\n                  \"Submit\"\r\n                )}\r\n              </button>}\r\n              titel=\"Confirm submitting your survey data\"\r\n              text={\r\n                <div>Are you sure you want to submit data provided in the survey form?</div>\r\n              }\r\n              confirmText=\"Yes am sure\"\r\n              cancelText=\"No\"\r\n              onConfirmClicked={handleConfirmClicked}\r\n              onCancelClicked={handleCancelClicked}\r\n              />\r\n            </React.Fragment>\r\n          )}\r\n        </div>\r\n      </form>\r\n    </div>\r\n    <Toaster />\r\n    {isExploding && <ConfettiExplosion />}\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport Form from '../Form/Form'\r\nimport {useDispatch } from \"react-redux\";\r\nimport { setFormState,setPercentage } from \"../../States/FormState\";\r\nimport { updateUsersData } from \"../../States/FormState\";\r\n\r\n\r\nfunction Home() {\r\n    const dispatch = useDispatch();\r\n    const handleButtonClick=()=>{\r\n        dispatch(setFormState(1));\r\n        dispatch(updateUsersData(null))\r\n        dispatch(setPercentage(33.33))\r\n    }\r\n  return (\r\n    <>\r\n        <div className=\"container-fluid full-height\">\r\n            <div className=\"row row-height\">\r\n                <div className=\"col-lg-6 content-left\">\r\n                    <div className=\"content-left-wrapper\">\r\n                        <Link to=\"/\" id=\"logo\"  rel=\"noreferrer\"><img src=\"img/logo.png\" alt=\"\" width=\"49\" height=\"35\"/></Link>\r\n                        <div id=\"social\">\r\n                            <ul>\r\n                                <li><a href=\"https://facebook.com\" ><i className=\"icon-facebook\"></i></a></li>\r\n                                <li><a href=\"https://twitter.com\"><i className=\"icon-twitter\"></i></a></li>\r\n                                <li><a href=\"https://instagram.com\"><i className=\"icon-instagram\"></i></a></li>\r\n                                <li><a href=\"https://linkedin.com\"><i className=\"icon-linkedin\"></i></a></li>\r\n                            </ul>\r\n                        </div>\r\n                        <div>\r\n                            <figure><img src=\"img/info_graphic_1.svg\" alt=\"\" className=\"img-fluid\"/></figure>\r\n                            <h2>OpinionHarbor Survey</h2>\r\n                            <p>Discover, Share, and Influence. Welcome to OpinionHarbor, where your opinions matter. Take part in surveys that impact industries, shape products, and influence change. Join a community of voices, express your thoughts, and help build a better tomorrow.</p>\r\n                            <button type=\"button\" className=\"btn_1 rounded\" target=\"_parent\" onClick={handleButtonClick}>Start Your Survey</button>\r\n                        </div>\r\n                        <div className=\"copy\">&copy; {new Date().getFullYear()} OpinionHarbor. All Rights Reserved</div>\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"col-lg-6 content-right\" id=\"start\">\r\n                    <Form/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Home"],"names":["_jsx","className","id","tabIndex","role","children","_jsxs","type","_ref","setFormValid","setFinalFormData","fullNameInputRef","useRef","formData","setFormData","useState","full_name","email_address","terms","validations","setValidations","errors","setErrors","useEffect","isAnyFieldEmpty","Object","values","some","value","isFormValid","every","valid","handleInputChange","e","name","checked","target","errorMessage","test","prevFormData","current","focus","_Fragment","concat","placeholder","title","onChange","ref","htmlFor","Link","to","rel","required","Modal","Loader","ContentLoader","speed","width","height","viewBox","backgroundColor","foregroundColor","x","y","rx","ry","setStepTwoValid","descriptionInputRef","loading","setLoading","genderOptions","setGenderOptions","description","gender","endpoint","endpoints","options","production","axios","get","then","response","data","catch","error","toast","rows","cols","map","option","charAt","toUpperCase","slice","Toaster","setStepThreeValid","programmingStackOptions","setProgrammingStackOptions","selectedProgrammingStack","setSelectedProgrammingStack","selectedCertificates","setSelectedCertificates","programmingStackError","setProgrammingStackError","certificatesError","setCertificatesError","programming_stack","isProgrammingStackValid","length","isCertificatesValid","file","updatedData","join","certificate","handleProgrammingStackChange","filter","stack","accept","multiple","files","state","useSelector","formState","usersData","dispatch","useDispatch","setFormState","index","href","url","FontAwesomeIcon","icon","faFilePdf","style","color","marginLeft","message","icons","success","faCheckCircle","faExclamationCircle","info","faInfoCircle","toastStyle","padding","borderRadius","display","alignItems","marginRight","formRef","isExploding","setIsExploding","stepState","finalFormData","formValid","stepTwoValid","stepThreeValid","handleNext","setPercentage","percentage","handlePrevious","keys","updateUsersData","encType","onSubmit","preventDefault","Step1","Step2","Step3","Overall","onClick","disabled","React","ReactConfirmPopup","trigger","titel","text","confirmText","cancelText","onConfirmClicked","handleConfirmClicked","FormData","responses","append","forEach","put","headers","status","setTimeout","errorMessages","undefined","key","messagesForCurrentKey","capitalizedKey","Array","isArray","onCancelClicked","custom","t","CustomToast","ConfettiExplosion","src","alt","handleButtonClick","Date","getFullYear","Form"],"sourceRoot":""}